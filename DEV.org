#+STARTUP: overview indent
* Coding conventions
** Function naming
- Functions that return a ggplot object must be named with the
  =panel_= prefix.
- After that prefix, the function name must match the config option
  name in the =.yaml= file.

** Function implementation
- The =panel_= functions must return the complete ggplot object. No
  further editions need to be done outside it.
- All =panel_= functions receive the full =data= as the first parameter.
- All the possible configurations (legends, plot layers, metrics, ...)
  of the =panel_= functions have to be passed as parameters.
- Use the =data$config= values as default values for the parameters.

* Util Functions

** Check package
#+begin_src R
devtools::check(".")
#+end_src

** Test Units
#+begin_src R
devtools::test()
#+end_src

** Style all files
#+begin_src R
styler::style_dir(".")
#+end_src

** Coverage
#+begin_src R
covr::package_coverage()
c %>% as.tibble() -> t
t %>% filter(filename=="R/phase2.R", value==0) %>% select(functions, first_line, last_line) %>% data.frame()
#+end_src

** For manual build
Install:
- texi2dvi

** For travis Run all test
add (test) in the end of your commit message

** For Gen data
#+begin_src R
library(starvz)
pre_phase1 <- starvz_phase1(system.file("extdata", "lu_trace", package = "starvz"), lu_colors, state_filter=2, whichApplication="lu")
starvz_sample_lu <- starvz_read(system.file("extdata", "lu_trace", package = "starvz"), system.file("extdata", "config.yaml", package = "starvz"), selective=FALSE)
usethis::use_data(starvz_sample_lu)
#+end_src

** Message to CRAN for Submission on 25/08/2020
*** Test environments
- local ubuntu 20.04 install, R 3.6.3
- Travis-CI (https://travis-ci.org/github/schnorr/starvz/builds/721041088):
  - Linux: R 4.0.0
  - Windows: R 4.0.2
  - OS X: 4.0.2
- Win-Builder (devel, release and oldrelease)

*** R CMD check results

* Ideas
** Highlight Late Starting Tasks
*** Description
Use alpha values to highlight late starting tasks, i.e. tasks that
have all their dependencies ready but have their execution delayed.

- We can set a fixed threshold to mark a task as late starting, or we
  can calculate the alpha value based on the waiting time for each
  task, considering the max waiting time.

*** Motivation
 This can be useful to highlight critical moments of the application,
 possibly revealing bad scheduling decisions.


* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Lucas Leandro Nesi <lucas.nesi@inf.ufrgs.br>’

New submission

Status: 1 NOTE

This is our first submission.

** Message to CRAN for Submission on 27/08/2020

*** Resubmission
We made all the requested improvements:
 - Improved acronyms in Description
 - Removed almost all \dontrun in examples and used \donttest in examples that take >5s
   - The remaining \dontrun functions (R/atree.R) are for specific data that are not present in the package (large)
 - Removed commented code lines in examples (added the examples instead)
 - Removed all calls of options() and setwd() in extra scripts available in inst/tools

Thank you for all your comments

*** Test environments
- local ubuntu 20.04 install, R 3.6.3
- Travis-CI (https://travis-ci.org/github/schnorr/starvz/builds/721814619):
  - Linux: R 4.0.0
  - Windows: R 4.0.2
  - OS X: 4.0.2
- Win-Builder (devel, release and oldrelease)

*** R CMD check results

* checking CRAN incoming feasibility ... NOTE
Maintainer: ‘Lucas Leandro Nesi <lucas.nesi@inf.ufrgs.br>’

New submission

* checking for future file timestamps ... NOTE
unable to verify current time

Status: 2 NOTEs

This is a new package.
And it seems that http://worldclockapi.com/ is down.
